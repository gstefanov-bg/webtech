#!groovy

pipeline {
  agent {
    node {
      label 'regus'
    }
  }

  environment {
    CLUSTER_DOMAIN="${params.PLATFORM}.${params.DOMAIN.trim()}"
    DOMAIN="${params.DOMAIN.trim()}"
    REPO="${GIT_URL.tokenize('/.')[-2]}"
    COMMIT="${GIT_COMMIT.substring(0, Math.min(GIT_COMMIT.length(), 6))}"
    LOWERCASE_BRANCH="${GIT_BRANCH.toLowerCase().replaceAll('^[0-9]', '').replaceAll('[^a-z0-9]', '-').replaceAll('-+', '-').replaceAll('(^-+|-+$)', '').take(63)}"
    NAMESPACE="${env.LOWERCASE_BRANCH}"
    DOCKER_REGISTRY="430500215308.dkr.ecr.eu-central-1.amazonaws.com"
    AWS_CREDENTIALS_ID="aws-credentials-devops"
    DOCKER_CREDENTIALS_ID="ecr:eu-central-1:${AWS_CREDENTIALS_ID}"
  }

  options {
    buildDiscarder(logRotator(daysToKeepStr: '14'))
  }

  parameters {
    string(defaultValue: 'main', description: 'WebTech Branch Name', name: 'BRANCH')
    string(defaultValue: 'webtech-fmi.bg', description: 'Domain', name: 'DOMAIN')
  }

  stages {
    stage('Build') {
      steps {
        script {
          image = docker.build("${REPO}:${COMMIT}", "-f Dockerfile .")
        }
      }
    }

    stage('Push') {
      steps {
        script {
          // Lines below are to remove annoying Docker config defaults
          sh 'rm ~/.dockercfg || true'
          sh 'rm ~/.docker/config.json || true'
          // End Docker config removal

          docker.withRegistry("https://${DOCKER_REGISTRY}", DOCKER_CREDENTIALS_ID) {
            image.push()
          }
        }
      }
    }

    stage('Deploy') {
      environment {
        KUBECONFIG = "/home/jenkins/.kube/config"
      }
      stages {
        stage('kubectl apply') {
          steps {
            sh "echo 'envsubst config/deploy/manifest.yml | kubectl apply -'"
          }
        }
      }
      post {
        always {
          sh "chmod -R 777 ."
          cleanWs disableDeferredWipeout: true
          deleteDir()
        }
      }
    }
  }

  post {
    cleanup {
      sh "chmod -R 777 ."
      cleanWs disableDeferredWipeout: true
      /* clean up our custom workspace */
      deleteDir()
      dir("${workspace}@tmp") {
        deleteDir()
      }
    }
  }
}
